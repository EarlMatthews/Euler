

"""
Each new term in the Fibonacci sequence is generated by adding the previous two terms.
By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

"""

# We're doing this iteratively because recursion is slow

next = 0                                    # next fib number
limit = 14_000_000                          # upper limit of numbers considered
first_fib = 0                               # The first and second fib numbers are defined as 0 and 1
second_fib = 1
total = 0                                   # hold on to the total
while (first_fib + second_fib) < limit:     # Check first_fib + Second_fib instead of next since the value isn't calculated until next iter
    next = first_fib + second_fib           # and we dont want to go over
    first_fib = second_fib
    second_fib = next                       # second and next become first and send fib
    if next % 2 ==0:                        # only sum the even items
        total += next
print(total)                                # print it all out